{"version":3,"file":"static/js/836.12ec82db.chunk.js","mappings":"6NAkFA,EAxEmB,WAEf,OAAoCA,EAAAA,EAAAA,UAAS,IAA7C,eAAOC,EAAP,KAAmBC,EAAnB,KACA,GAA4CF,EAAAA,EAAAA,WAAS,GAArD,eAAOG,EAAP,KAAuBC,EAAvB,KACA,GAA4BJ,EAAAA,EAAAA,UAAS,GAArC,eAAOK,EAAP,KAAeC,EAAf,KACA,GAAsCN,EAAAA,EAAAA,WAAS,GAA/C,eAAOO,EAAP,KAAoBC,EAApB,KAEA,GAAuCC,EAAAA,EAAAA,KAAhCC,EAAP,EAAOA,QAASC,EAAhB,EAAgBA,MAAOC,EAAvB,EAAuBA,cAEvBC,EAAAA,EAAAA,YAAU,WACNC,EAAUT,GAAQ,EACrB,GAAE,IAEH,IAAMS,EAAY,SAACT,EAAQU,GACbX,GAAVW,GACAH,EAAaP,GACRW,KAAKC,EACb,EAEKA,EAAqB,SAACC,GACxB,IAAIC,GAAQ,EACRD,EAAgB,IAChBC,GAAQ,GAEZjB,EAAc,GAAD,eAAKD,IAAL,OAAoBiB,KACjCd,GAAkB,GAClBE,EAAUD,EAAS,GACnBG,EAAeW,EAClB,EAsBD,IAAMC,EApBN,SAAsBC,GAClB,IAAMD,EAAQC,EAAIC,KAAI,SAACC,EAAMC,GACzB,OACI,eAAIC,UAAU,eAAd,UACI,UAAC,KAAD,CAAMC,GAAE,kBAAaH,EAAKI,IAA1B,WACI,gBAAKC,IAAKL,EAAKM,UAAWC,IAAKP,EAAKQ,MAAON,UAAU,sBACrD,gBAAKA,UAAU,oBAAf,SAAoCF,EAAKQ,SACzC,gBAAKN,UAAU,qBAAf,SAAqCF,EAAKS,YAJhBR,EAQzC,IAED,OACI,eAAIC,UAAU,eAAd,SACKL,GAGZ,CAEaa,CAAYhC,GAEpBiC,EAAevB,GAAQ,SAACwB,EAAA,EAAD,IAAkB,KACzCC,EAAU1B,IAAYP,GAAiB,SAACkC,EAAA,EAAD,IAAa,KAG1D,OACI,iBAAKZ,UAAU,eAAf,UACKS,EACAE,EACAhB,GACD,mBACIkB,SAAUnC,EACVoC,MAAO,CAAC,QAAYhC,EAAc,OAAS,SAC3CkB,UAAU,mCACVe,QAAS,kBAAM1B,EAAUT,EAAhB,EAJb,UAKI,gBAAKoB,UAAU,QAAf,2BAIf,E,mHC/DD,EAbkB,WACd,OACI,iBAAKA,UAAU,cAAf,WACI,gBAAKG,IAAKa,EAAUX,IAAI,cACxB,iBAAKL,UAAU,mBAAf,oCAC0B,kBAD1B,kBAIA,gBAAKG,IAAKc,EAAcZ,IAAI,oBAGvC,ECHD,EATmB,WACf,OACI,iCACI,SAAC,EAAD,KACA,SAAC,EAAD,MAGX,C,gFCNc,SAASa,EAAmBtB,GACzC,OCJa,SAA4BA,GACzC,GAAIuB,MAAMC,QAAQxB,GAAM,OAAO,EAAAyB,EAAA,GAAiBzB,EAClD,CDES,CAAkBA,IELZ,SAA0B0B,GACvC,GAAsB,qBAAXC,QAAmD,MAAzBD,EAAKC,OAAOC,WAA2C,MAAtBF,EAAK,cAAuB,OAAOH,MAAMM,KAAKH,EACtH,CFGmC,CAAgB1B,KAAQ,EAAA8B,EAAA,GAA2B9B,IGLvE,WACb,MAAM,IAAI+B,UAAU,uIACtB,CHG8F,EAC9F,C","sources":["components/comicsList/ComicsList.js","components/appBanner/AppBanner.js","components/pages/ComicsPage.js","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport useMarvelService from '../../services/MarvelService';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\n\nimport './comicsList.scss';\n// import uw from '../../resources/img/UW.png';\n// import xMen from '../../resources/img/x-men.png';\n\nconst ComicsList = () => {\n\n    const [comicsList, setComicsList] = useState([]);\n    const [newItemLoading, setNewItemLoading] = useState(false);\n    const [offset, setOffset] = useState(0);\n    const [comicsEnded, setComicsEnded] = useState(false);\n\n    const {loading, error, getAllComics} = useMarvelService();\n\n    useEffect(() => {\n        onRequest(offset, true)\n    }, [])\n\n    const onRequest = (offset, initial) => {\n        initial ? setNewItemLoading(false) : setNewItemLoading(true);\n        getAllComics(offset)\n            .then(onComicsListLoaded)\n    }\n    \n    const onComicsListLoaded = (newComicsList) => {\n        let ended = false;\n        if (newComicsList < 8) {\n            ended = true;\n        }\n        setComicsList([...comicsList, ...newComicsList]);\n        setNewItemLoading(false);\n        setOffset(offset + 8);\n        setComicsEnded(ended);\n    }\n\n    function renderItems (arr) {\n        const items = arr.map((item, i) => {\n            return (\n                <li className=\"comics__item\" key={i}>\n                    <Link to={`/comics/${item.id}`}>\n                        <img src={item.thumbnail} alt={item.title} className=\"comics__item-img\"/>\n                        <div className=\"comics__item-name\">{item.title}</div>\n                        <div className=\"comics__item-price\">{item.price}</div>\n                    </Link>\n                </li>    \n            )\n        })\n\n        return (\n            <ul className=\"comics__grid\">\n                {items}\n            </ul>    \n        )\n    }\n\n    const items = renderItems(comicsList);\n\n    const errorMessage = error ? <ErrorMessage/> : null;\n    const spinner = loading && !newItemLoading ? <Spinner/> : null;\n    \n\n    return (\n        <div className=\"comics__list\">\n            {errorMessage}\n            {spinner}\n            {items}\n            <button \n                disabled={newItemLoading}\n                style={{'display' : comicsEnded ? 'none' : 'block'}}\n                className=\"button button__main button__long\"\n                onClick={() => onRequest(offset)}>\n                <div className=\"inner\">load more</div>\n            </button>\n        </div>\n    )\n}\n\nexport default ComicsList;","import './appBanner.scss';\nimport avengers from '../../resources/img/Avengers.png';\nimport avengersLogo from '../../resources/img/Avengers_logo.png';\n\nconst AppBanner = () => {\n    return (\n        <div className=\"app__banner\">\n            <img src={avengers} alt=\"Avengers\"/>\n            <div className=\"app__banner-text\">\n                New comics every week!<br/>\n                Stay tuned!\n            </div>\n            <img src={avengersLogo} alt=\"Avengers logo\"/>\n        </div>\n    )\n}\n\nexport default AppBanner;","import ComicsList from '../comicsList/ComicsList';\r\nimport AppBanner from '../appBanner/AppBanner';\r\n\r\nconst ComicsPage = () => {\r\n    return (\r\n        <>\r\n            <AppBanner/>\r\n            <ComicsList/>\r\n        </>    \r\n    )\r\n}\r\n\r\nexport default ComicsPage;","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}"],"names":["useState","comicsList","setComicsList","newItemLoading","setNewItemLoading","offset","setOffset","comicsEnded","setComicsEnded","useMarvelService","loading","error","getAllComics","useEffect","onRequest","initial","then","onComicsListLoaded","newComicsList","ended","items","arr","map","item","i","className","to","id","src","thumbnail","alt","title","price","renderItems","errorMessage","ErrorMessage","spinner","Spinner","disabled","style","onClick","avengers","avengersLogo","_toConsumableArray","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","from","unsupportedIterableToArray","TypeError"],"sourceRoot":""}